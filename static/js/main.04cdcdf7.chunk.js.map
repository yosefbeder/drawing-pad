{"version":3,"sources":["containers/Header/Header.module.css","components/IconButton.tsx","helper/withDropdown.tsx","hooks/useCanvas.ts","utils/canvas.ts","components/Form/Canvas.tsx","components/Form/Input.tsx","components/Form/Form.tsx","hooks/redux.ts","store/constants/configs.ts","store/constants/app.ts","containers/Header/Header.tsx","containers/Canvas.tsx","App.tsx","store/reducers/configs.ts","store/reducers/app.ts","store/index.ts","index.tsx","components/Form/Form.module.css"],"names":["module","exports","IconButton","props","className","children","isSelected","restProps","Dropdown","withDropdown","component","dropdown","dropdownClassName","isDropdownShown","onContainerEnter","onContainerLeave","onMouseEnter","onMouseLeave","CSSTransition","classNames","in","timeout","unmountOnExit","mountOnEnter","useCanvas","draw","canvasRef","useRef","useState","ctx","setCtx","useEffect","current","getContext","alert","ref","applyStyles","configs","lineCap","lineWidth","size","shadowBlur","blur","shadowColor","color","strokeStyle","Canvas","clearRect","fullCircle","Math","PI","beginPath","arc","stroke","classes","canvas","width","height","Input","label","input","Form","values","onChange","exclude","setSize","setBlur","setColor","container","form","includes","type","value","e","target","min","useAppSelector","useSelector","PENCIL","ERASER","CHANGE_TOOL","PUSH_PATH","UNDO","REDO","Header","dispatch","useDispatch","selectedTool","state","app","eraserConfigs","eraser","pencilConfigs","pencil","isEraserConfigsShown","setIsEraserConfigsShown","isPencilConfigsShown","setIsPencilConfigsShown","past","paths","present","future","localStorage","setItem","JSON","stringify","onClick","payload","header","disabled","length","drawPath","path","points","forEach","point","lineTo","getPosInCanvas","canvasEl","x","y","getBoundingClientRect","left","top","curConfigs","curPath","setCurPath","onMouseDown","pushPoint","prev","addEventListener","document","removeEventListener","once","App","canvasColor","intialState","parse","getItem","configsReducer","action","appReducer","slice","composeEnhancers","composeWithDevTools","reducer","combineReducers","store","createStore","applyMiddleware","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.04cdcdf7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Header_container__22Zsd\",\"header\":\"Header_header__3HWXf\",\"dropdown\":\"Header_dropdown__2iUwB\"};","import React from 'react';\r\n\r\ninterface IconButtonProps {\r\n  isSelected?: boolean;\r\n}\r\n\r\nconst IconButton: React.FC<\r\n  IconButtonProps & React.ButtonHTMLAttributes<HTMLButtonElement>\r\n> = props => {\r\n  const { className, children, isSelected, ...restProps } = props;\r\n\r\n  return (\r\n    <button\r\n      className={`icon-button ${className} ${\r\n        isSelected && 'icon-button--selected'\r\n      }`}\r\n      {...restProps}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default IconButton;\r\n","import React from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\ninterface DropdownProps {\r\n  className?: string;\r\n}\r\n\r\nconst Dropdown: React.FC<DropdownProps> = ({ children, className }) => {\r\n  return <div className={`dropdown ${className}`}>{children}</div>;\r\n};\r\n\r\nconst withDropdown = (\r\n  component: React.ReactNode,\r\n  dropdown: React.ReactNode,\r\n  dropdownClassName?: string,\r\n  isDropdownShown?: boolean,\r\n  onContainerEnter?: () => void,\r\n  onContainerLeave?: () => void,\r\n) => {\r\n  return (\r\n    <div\r\n      className=\"dropdown-container\"\r\n      onMouseEnter={onContainerEnter}\r\n      onMouseLeave={onContainerLeave}\r\n    >\r\n      {component}\r\n      <CSSTransition\r\n        classNames=\"fade\"\r\n        in={isDropdownShown}\r\n        timeout={300}\r\n        unmountOnExit\r\n        mountOnEnter\r\n      >\r\n        <Dropdown className={dropdownClassName}>{dropdown}</Dropdown>\r\n      </CSSTransition>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withDropdown;\r\n","import { useEffect, useRef, useState } from 'react';\r\n\r\nconst useCanvas = (draw?: (ctx: CanvasRenderingContext2D) => void) => {\r\n  const canvasRef = useRef<HTMLCanvasElement>(null);\r\n  const [ctx, setCtx] = useState<CanvasRenderingContext2D | null>(null);\r\n\r\n  useEffect(() => {\r\n    const ctx = canvasRef.current?.getContext('2d');\r\n\r\n    if (!ctx) {\r\n      alert(\"Your browser doesn't support canvas, so You can't use are app :(\");\r\n      return;\r\n    }\r\n\r\n    setCtx(ctx);\r\n\r\n    if (draw) {\r\n      draw(ctx);\r\n    }\r\n  }, [draw]);\r\n\r\n  return { ref: canvasRef, ctx };\r\n};\r\n\r\nexport default useCanvas;\r\n","import { ConfigType } from '../types';\r\n\r\nexport const applyStyles = (\r\n  ctx: CanvasRenderingContext2D,\r\n  configs: ConfigType,\r\n) => {\r\n  ctx.lineCap = 'round';\r\n  ctx.lineWidth = configs.size;\r\n  ctx.shadowBlur = configs.blur;\r\n  ctx.shadowColor = configs.color;\r\n  ctx.strokeStyle = configs.color;\r\n};\r\n","import React from 'react';\r\nimport useCanvas from '../../hooks/useCanvas';\r\nimport classes from './Form.module.css';\r\nimport { applyStyles } from '../../utils/canvas';\r\n\r\ninterface CanvasProps {\r\n  size: number;\r\n  blur: number;\r\n  color: string;\r\n}\r\n\r\nconst Canvas: React.FC<CanvasProps> = props => {\r\n  const { ref } = useCanvas(ctx => {\r\n    ctx.clearRect(0, 0, 150, 150);\r\n\r\n    const fullCircle = Math.PI * 2;\r\n\r\n    applyStyles(ctx, props);\r\n\r\n    ctx.beginPath();\r\n    ctx.arc(112.5, 75, 37.5, 0, fullCircle / 2, true);\r\n    ctx.arc(37.5, 75, 37.5, 0, fullCircle / 2);\r\n    ctx.stroke();\r\n  });\r\n\r\n  return (\r\n    <canvas\r\n      className={classes.canvas}\r\n      ref={ref}\r\n      width={150}\r\n      height={150}\r\n    ></canvas>\r\n  );\r\n};\r\n\r\nexport default Canvas;\r\n","import React from 'react';\r\nimport classes from './Form.module.css';\r\n\r\ninterface InputProps {\r\n  label: string;\r\n}\r\n\r\nconst Input: React.FC<\r\n  InputProps & React.InputHTMLAttributes<HTMLInputElement>\r\n> = props => {\r\n  const { className, label, ...restProps } = props;\r\n\r\n  return (\r\n    <div className={classes['input-group']}>\r\n      <div className={classes['input-label']}>{label}</div>\r\n      <input className={`${classes.input} ${className}`} {...restProps} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from 'react';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { ConfigType } from '../../types';\r\nimport Canvas from './Canvas';\r\nimport classes from './Form.module.css';\r\nimport Input from './Input';\r\n\r\ninterface FormProps {\r\n  values: {\r\n    size: number;\r\n    blur: number;\r\n    color: string;\r\n  };\r\n  onChange: (value: ConfigType) => void;\r\n  exclude?: ('size' | 'blur' | 'color')[];\r\n}\r\n\r\nconst Form: React.FC<FormProps> = ({ values, onChange, exclude = [] }) => {\r\n  const [size, setSize] = useState(values.size);\r\n  const [blur, setBlur] = useState(values.blur);\r\n  const [color, setColor] = useState(values.color);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      size !== values.size ||\r\n      blur !== values.blur ||\r\n      color !== values.color\r\n    ) {\r\n      onChange({ size, blur, color });\r\n    }\r\n  }, [size, blur, color]);\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <form className={classes.form}>\r\n        {!exclude.includes('size') && (\r\n          <Input\r\n            label=\"Size\"\r\n            type=\"number\"\r\n            value={size}\r\n            onChange={e => setSize(+e.target.value)}\r\n            min={1}\r\n          />\r\n        )}\r\n        {!exclude.includes('blur') && (\r\n          <Input\r\n            label=\"Blur\"\r\n            type=\"number\"\r\n            value={blur}\r\n            onChange={e => setBlur(+e.target.value)}\r\n            min={0}\r\n          />\r\n        )}\r\n\r\n        {!exclude.includes('color') && (\r\n          <Input\r\n            label=\"Color\"\r\n            value={color}\r\n            onChange={e => setColor(e.target.value)}\r\n          />\r\n        )}\r\n      </form>\r\n      <Canvas size={size} blur={blur} color={color} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\r\nimport type { RootState, AppDispatch } from '../store';\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","const [PENCIL, ERASER] = ['pencil', 'eraser'];\r\n\r\nexport { PENCIL, ERASER };\r\n","const [CHANGE_TOOL, PUSH_PATH, UNDO, REDO] = [\r\n  'changeTool',\r\n  'pushPath',\r\n  'undo',\r\n  'redo',\r\n];\r\n\r\nexport { CHANGE_TOOL, PUSH_PATH, UNDO, REDO };\r\n","import React, { useState } from 'react';\r\nimport classes from './Header.module.css';\r\nimport {\r\n  IoArrowUndoOutline as Undo,\r\n  IoArrowRedoOutline as Redo,\r\n} from 'react-icons/io5';\r\nimport { Eraser, Pencil } from 'react-bootstrap-icons';\r\nimport IconButton from '../../components/IconButton';\r\nimport withDropdown from '../../helper/withDropdown';\r\nimport Form from '../../components/Form/Form';\r\nimport { useAppDispatch, useAppSelector } from '../../hooks/redux';\r\nimport { ERASER, PENCIL } from '../../store/constants/configs';\r\nimport { CHANGE_TOOL, REDO, UNDO } from '../../store/constants/app';\r\nimport { useEffect } from 'react';\r\n\r\nconst Header = () => {\r\n  const dispatch = useAppDispatch();\r\n  const selectedTool = useAppSelector(state => state.app.selectedTool);\r\n  const eraserConfigs = useAppSelector(state => state.configs.eraser);\r\n  const pencilConfigs = useAppSelector(state => state.configs.pencil);\r\n\r\n  const [isEraserConfigsShown, setIsEraserConfigsShown] = useState(false);\r\n  const [isPencilConfigsShown, setIsPencilConfigsShown] = useState(false);\r\n\r\n  const past = useAppSelector(state => state.app.paths.past);\r\n  const present = useAppSelector(state => state.app.paths.present);\r\n  const future = useAppSelector(state => state.app.paths.future);\r\n\r\n  useEffect(() => {\r\n    // push configs to the local storage\r\n    localStorage.setItem('eraserConfigs', JSON.stringify(eraserConfigs));\r\n    localStorage.setItem('pencilConfigs', JSON.stringify(pencilConfigs));\r\n  }, [eraserConfigs, pencilConfigs]);\r\n\r\n  useEffect(() => {\r\n    // push the history stack to the local stoarge\r\n    localStorage.setItem('past', JSON.stringify(past));\r\n    localStorage.setItem('present', JSON.stringify(present));\r\n    localStorage.setItem('future', JSON.stringify(future));\r\n  }, [past, present, future]);\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      {withDropdown(\r\n        <IconButton\r\n          onClick={() => dispatch({ type: CHANGE_TOOL, payload: 'eraser' })}\r\n          isSelected={selectedTool === 'eraser'}\r\n        >\r\n          <Eraser />\r\n        </IconButton>,\r\n        <Form\r\n          values={{ ...eraserConfigs, color: '#fff' }}\r\n          exclude={['color']}\r\n          onChange={values => dispatch({ type: ERASER, payload: values })}\r\n        />,\r\n        classes.dropdown,\r\n        isEraserConfigsShown,\r\n        () => setIsEraserConfigsShown(true),\r\n        () => setIsEraserConfigsShown(false),\r\n      )}\r\n\r\n      {withDropdown(\r\n        <IconButton\r\n          onClick={() => dispatch({ type: CHANGE_TOOL, payload: 'pencil' })}\r\n          isSelected={selectedTool === 'pencil'}\r\n        >\r\n          <Pencil />\r\n        </IconButton>,\r\n        <Form\r\n          values={pencilConfigs}\r\n          onChange={values => dispatch({ type: PENCIL, payload: values })}\r\n        />,\r\n        classes.dropdown,\r\n        isPencilConfigsShown,\r\n        () => setIsPencilConfigsShown(true),\r\n        () => setIsPencilConfigsShown(false),\r\n      )}\r\n\r\n      <h1 className={`header-1 ${classes.header}`}>Drawing Pad</h1>\r\n      <IconButton onClick={() => dispatch({ type: UNDO })} disabled={!present}>\r\n        <Undo />\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={() => dispatch({ type: REDO })}\r\n        disabled={future.length === 0}\r\n      >\r\n        <Redo />\r\n      </IconButton>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useAppSelector } from '../hooks/redux';\r\nimport useCanvas from '../hooks/useCanvas';\r\nimport { PUSH_PATH } from '../store/constants/app';\r\nimport { Path } from '../types';\r\nimport { applyStyles } from '../utils/canvas';\r\n\r\nconst canvasWidth = 960;\r\nconst canvasHeight = 500;\r\n\r\nconst drawPath = (ctx: CanvasRenderingContext2D, path: Path) => {\r\n  applyStyles(ctx, path.configs);\r\n\r\n  ctx.beginPath();\r\n\r\n  path.points.forEach(point => {\r\n    ctx.lineTo(...point);\r\n  });\r\n\r\n  ctx.stroke();\r\n};\r\n\r\nconst getPosInCanvas = (\r\n  canvasEl: HTMLCanvasElement,\r\n  x: number,\r\n  y: number,\r\n): [number, number] => {\r\n  const { left, top } = canvasEl.getBoundingClientRect();\r\n\r\n  return [x - left, y - top];\r\n};\r\n\r\nconst Canvas = () => {\r\n  /*\r\n    * You have two states here:\r\n      1. curPath: which is the path that you're currently drawing which will be injected into present when you finish drawing.\r\n      2. past + present: which is saved in the redux store.\r\n    \r\n    * How do they update the canvas:\r\n      1. curPath: doesn't clear the canvas each time it gets updated.\r\n      2. past + present: whenever present (when curPath is pushed to present) or past is changed redraw everything.\r\n  */\r\n\r\n  // Canvas el related stuff\r\n  const { ref, ctx } = useCanvas();\r\n  const selectedTool = useAppSelector(state => state.app.selectedTool);\r\n\r\n  // Global related state\r\n  const past = useAppSelector(state => state.app.paths.past);\r\n  const present = useAppSelector(state => state.app.paths.present);\r\n\r\n  // Local state\r\n  const dispatch = useDispatch();\r\n  const curConfigs = useAppSelector(state => state.configs[selectedTool]);\r\n  const [curPath, setCurPath] = useState<Path | null>(null);\r\n\r\n  // Updating curPath\r\n  useEffect(() => {\r\n    if (curPath) {\r\n      drawPath(ctx!, curPath);\r\n    }\r\n  }, [curPath]);\r\n\r\n  // update present and past\r\n  useEffect(() => {\r\n    if (ctx) {\r\n      ctx.clearRect(0, 0, canvasWidth, canvasHeight);\r\n      if (present) {\r\n        [...past, present].forEach(path => drawPath(ctx, path!));\r\n      } else {\r\n        past.forEach(path => drawPath(ctx, path));\r\n      }\r\n    }\r\n  }, [present, past]);\r\n\r\n  useEffect(() => {\r\n    if (ctx) {\r\n      if (present) {\r\n        [...past, present].forEach(path => drawPath(ctx, path!));\r\n      } else {\r\n        past.forEach(path => drawPath(ctx, path));\r\n      }\r\n    }\r\n  }, [ctx]);\r\n\r\n  return (\r\n    <canvas\r\n      className={`canvas canvas--${selectedTool}`}\r\n      ref={ref}\r\n      width={canvasWidth}\r\n      height={canvasHeight}\r\n      onMouseDown={() => {\r\n        const canvasEl = ref.current!;\r\n\r\n        setCurPath({ configs: curConfigs, points: [] });\r\n\r\n        const pushPoint = (e: MouseEvent) => {\r\n          setCurPath(prev => ({\r\n            ...prev!,\r\n            points: [\r\n              ...(prev?.points || []),\r\n              getPosInCanvas(canvasEl, e.x, e.y),\r\n            ],\r\n          }));\r\n        };\r\n\r\n        canvasEl.addEventListener('mousemove', pushPoint);\r\n\r\n        document.addEventListener(\r\n          'mouseup',\r\n          () => {\r\n            canvasEl.removeEventListener('mousemove', pushPoint);\r\n            // * We update it this way because we can't access the last state from this callback function\r\n            // * If we dispatch directly with prev we get an error\r\n            let path;\r\n\r\n            setCurPath(prev => {\r\n              path = prev;\r\n              return null;\r\n            });\r\n\r\n            dispatch({ type: PUSH_PATH, payload: path });\r\n          },\r\n          { once: true },\r\n        );\r\n      }}\r\n    ></canvas>\r\n  );\r\n};\r\n\r\nexport default Canvas;\r\n","import React from 'react';\nimport Header from './containers/Header/Header';\nimport Canvas from './containers/Canvas';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Header />\n      <Canvas />\n    </div>\n  );\n}\n\nexport default App;\n","import { ConfigsType, ConfigType } from '../../types';\r\n\r\nimport { PENCIL, ERASER } from '../constants/configs';\r\n\r\nconst canvasColor = 'hsl(200, 20%, 20%)';\r\n\r\nconst intialState: ConfigsType = {\r\n  pencil: JSON.parse(localStorage.getItem('pencilConfigs')!) || {\r\n    size: 2,\r\n    blur: 1,\r\n    color: '#fff',\r\n  },\r\n  eraser: JSON.parse(localStorage.getItem('eraserConfigs')!) || {\r\n    size: 15,\r\n    blur: 5,\r\n    color: canvasColor,\r\n  },\r\n};\r\n\r\nconst configsReducer = (\r\n  state: ConfigsType = intialState,\r\n  action: {\r\n    type: typeof PENCIL | typeof ERASER;\r\n    payload: ConfigType;\r\n  },\r\n): ConfigsType => {\r\n  if (action.type === PENCIL) {\r\n    return {\r\n      ...state,\r\n      pencil: action.payload,\r\n    };\r\n  }\r\n\r\n  if (action.type === ERASER) {\r\n    return {\r\n      ...state,\r\n      eraser: { ...action.payload, color: canvasColor },\r\n    };\r\n  }\r\n\r\n  return state;\r\n};\r\n\r\nexport default configsReducer;\r\n","import { Tool } from '../../types';\r\nimport { CHANGE_TOOL, PUSH_PATH, UNDO, REDO } from '../constants/app';\r\nimport { Path } from '../../types';\r\n\r\ninterface AppType {\r\n  selectedTool: Tool;\r\n  paths: { past: Path[]; present: Path | null; future: Path[] };\r\n}\r\n\r\ntype ActionType = {\r\n  type: typeof CHANGE_TOOL | typeof PUSH_PATH;\r\n  payload?: Tool | Path;\r\n};\r\n\r\nconst intialState: AppType = {\r\n  selectedTool: 'pencil',\r\n  paths: {\r\n    past: JSON.parse(localStorage.getItem('past')!) || [],\r\n    present: JSON.parse(localStorage.getItem('present')!) || null,\r\n    future: JSON.parse(localStorage.getItem('future')!) || [],\r\n  },\r\n};\r\n\r\nconst appReducer = (\r\n  state: AppType = intialState,\r\n  action: ActionType,\r\n): AppType => {\r\n  if (action.type === CHANGE_TOOL) {\r\n    return {\r\n      ...state,\r\n      selectedTool: action.payload as Tool,\r\n    };\r\n  }\r\n\r\n  if (action.type === PUSH_PATH) {\r\n    /*\r\n      If present null\r\n        push to it\r\n        don't touch past\r\n        reset future\r\n        \r\n      push action.payload to it\r\n      push preset to past\r\n      reset future\r\n    */\r\n    if (!state.paths.present) {\r\n      return {\r\n        ...state,\r\n        paths: {\r\n          ...state.paths,\r\n          present: action.payload as Path,\r\n          future: [],\r\n        },\r\n      };\r\n    }\r\n\r\n    return {\r\n      ...state,\r\n      paths: {\r\n        past: [...state.paths.past, state.paths.present],\r\n        present: action.payload as Path,\r\n        future: [],\r\n      },\r\n    };\r\n  }\r\n\r\n  if (action.type === UNDO) {\r\n    /*\r\n      If past is empty\r\n        push present to future\r\n        set present to null\r\n\r\n      push last past to present and present to future\r\n    */\r\n\r\n    if (state.paths.past.length === 0) {\r\n      return {\r\n        ...state,\r\n        paths: {\r\n          ...state.paths,\r\n          present: null,\r\n          future: [state.paths.present!, ...state.paths.future],\r\n        },\r\n      };\r\n    }\r\n\r\n    return {\r\n      ...state,\r\n      paths: {\r\n        past: state.paths.past.slice(0, -1),\r\n        present: state.paths.past[state.paths.past.length - 1],\r\n        future: [state.paths.present!, ...state.paths.future],\r\n      },\r\n    };\r\n  }\r\n\r\n  if (action.type === REDO) {\r\n    /* \r\n      If present is null\r\n        insert the first element in future to it\r\n        don't touch past\r\n\r\n      insert the first element in future to it\r\n      push present to past\r\n    */\r\n\r\n    if (!state.paths.present) {\r\n      return {\r\n        ...state,\r\n        paths: {\r\n          ...state.paths,\r\n          present: state.paths.future[0],\r\n          future: state.paths.future.slice(1),\r\n        },\r\n      };\r\n    }\r\n\r\n    return {\r\n      ...state,\r\n      paths: {\r\n        past: [...state.paths.past, state.paths.present!],\r\n        present: state.paths.future[0],\r\n        future: state.paths.future.slice(1),\r\n      },\r\n    };\r\n  }\r\n\r\n  return state;\r\n};\r\n\r\nexport default appReducer;\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport configsReducer from './reducers/configs';\r\nimport appReducer from './reducers/app';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nconst composeEnhancers = composeWithDevTools({});\r\n\r\nconst reducer = combineReducers({\r\n  configs: configsReducer,\r\n  app: appReducer,\r\n});\r\n\r\nexport const store = createStore(reducer, composeEnhancers(applyMiddleware()));\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Form_container__2nz3T\",\"form\":\"Form_form__1ylUj\",\"canvas\":\"Form_canvas__kgrin\",\"input-group\":\"Form_input-group__1BKrJ\",\"input-label\":\"Form_input-label__4RLsl\",\"input\":\"Form_input__m2L4O\"};"],"sourceRoot":""}